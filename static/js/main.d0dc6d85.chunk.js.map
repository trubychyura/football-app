{"version":3,"sources":["context/types.js","context/modal/modalContext.js","context/modal/modalReducer.js","context/modal/modalState.js","context/spinner/spinnerContext.js","context/spinner/spinnerReducer.js","context/spinner/spinnerState.js","assets/img/premier-league.png","assets/img/primeira-league.png","assets/img/serie-a.png","assets/img/serie-brasil.png","assets/img/league1.png","assets/img/la-liga.png","assets/img/eradivisie.png","assets/img/championship.png","assets/img/bundesliga.png","helper/config.js","helper/helper.js","helper/fetchData.js","hooks/useRouter.js","hooks/useAsyncError.js","hooks/useFetchData.js","components/General/Spinner.js","components/General/CompetitionTitle.js","components/Competition/MatchScore.js","components/General/Tooltip.js","components/General/Match.js","components/Home/GroupMatches.js","components/Home/LiveMatches.js","components/Home/MatchFilter.js","components/Home/DatePicker.js","components/Home/Home.js","components/Competition/Navigation.js","components/Competition/Header.js","components/General/LoadBtn.js","components/Competition/Matchday.js","components/Competition/Matches.js","hooks/usePrevious.js","components/Competition/Scorers.js","components/Competition/Standing.js","components/Competition/Competition.js","components/TeamProfile/ProfileHeader.js","components/TeamProfile/ProfileBody.js","components/TeamProfile/TeamProfile.js","components/General/MatchProfile.js","assets/img/brand-img.png","components/Navigation/NavItem.js","components/Navigation/NavList.js","components/Navigation/Navigation.js","components/General/ErrorBoundary.js","App.js","index.js"],"names":["SHOW_MODAL","HIDE_MODAL","SHOW_SPINNER","HIDE_SPINNER","ModalContext","createContext","ModalReducer","state","action","type","payload","visible","ModalState","children","useReducer","dispatch","Provider","value","showModal","matchId","hideModal","modal","SpinnerContext","SpinnerReducer","spinnerKeys","concat","filter","key","SpinnerState","showSpinner","hideSpinner","isLoading","includes","BASE_URL","API_TOKEN","DAY_NAMES","competitionList","iconRoute","premier","order","name","id","route","championship","bundesliga","laLiga","seriaA","league1","eradivisie","primeira","serieBrasil","spinnerList","styles","variant","standingSettings","0","tip","1","2","3","4","5","6","7","scorersSettings","DEFAULT_QUERY","limit","pos_range","neg_range","getDate","string","formDate","date","Date","year","getFullYear","month","getMonth","day","numberDay","getDay","hours","getHours","minutes","getMinutes","days","setDate","getCompetitionId","find","fetchData","path","a","query","fetch","method","headers","response","json","data","fetchTeamData","teamId","pathname","fetchMatch","head2head","match","competition","utcDate","status","venue","matchday","score","homeTeam","awayTeam","fetchCompetitionInfo","compName","compId","area","currentSeason","startDate","endDate","currentMatchday","season","substr","fetchCurrentMatches","param","fetchStanding","fetchScorers","fetchCompetitionMatches","range","matches","useRouter","params","useParams","location","useLocation","history","useHistory","useRouteMatch","useMemo","push","replace","queryString","parse","search","stringify","useAsyncError","useState","setError","useCallback","err","useFetchData","func","deps","spinnerName","rest","setData","useContext","throwError","useEffect","errorCode","Error","message","Spinner","className","animation","defaultProps","CompetitionTitle","img","country","Image","src","alt","MatchScore","Tooltip","OverlayTrigger","placemant","overlay","Match","iconStyles","size","style","maxWidth","width","to","minWidth","fullTime","onClick","role","GroupMatches","icon","ensignUrl","Table","responsive","hover","colSpan","map","liveSpinner","LiveMatches","setMatches","sortedMatches","sortByCompetition","filteredMatches","filterByStatus","forEach","hasOwnProperty","Object","entries","item","toUpperCase","length","Row","compMatches","MatchFilter","ToggleButtonGroup","onChange","val","ToggleButton","as","Nav","Item","DatePicker","Form","Label","Control","event","target","custom","Array","fill","_","index","DEFAULT_SELECT_RANGE","Home","Col","lg","CompetitionNav","url","exact","Link","headerSpinner","CompetitionHeader","competitionName","rounded","thumbnail","ListGroup","LoadBtn","queryName","Button","queryParam","changeQuery","aria-hidden","Matchday","matchesSpinner","buttonSpinner","CompetitionMatches","prevUrl","prevRef","useRef","current","usePrevious","orderedMatches","sort","key1","orderingMatches","sortByMatchday","scorersSpinner","CompetitionScorers","scorers","setScorers","cursor","position","player","team","numberOfGoals","standingSpinner","CompetitionStanding","standing","setStanding","standings","table","crestUrl","playedGames","won","draw","lost","points","goalsFor","goalsAgainst","Competition","Header","component","Standing","Matches","Scorers","ProfileHeader","sm","ProfileBody","setKey","address","phone","website","email","founded","clubColors","squad","Tabs","activeKey","onSelect","k","Tab","eventKey","title","tabClassName","nationality","shirtNumber","profileSpinner","TeamProfile","shortName","initialMatch","halfTime","modalSpinner","MatchProfile","setMatch","Modal","show","onHide","closeButton","Body","xs","winner","numberOfMatches","wins","draws","losses","NavItem","itemClass","activeClassName","NavList","competitions","Navigation","Navbar","collapseOnSelect","expand","Brand","NavLink","logo","Toggle","aria-controls","Collapse","ErrorBoundary","error","window","reload","this","Heading","props","Component","App","Container","fluid","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0dc6d85.chunk.js","sourcesContent":["export const SHOW_MODAL = 'SHOW_MODAL';\nexport const HIDE_MODAL = 'HIDE_MODAL';\nexport const SHOW_SPINNER = 'SHOW_SPINNER';\nexport const HIDE_SPINNER = 'HIDE_SPINNER';\n","import { createContext } from 'react';\n\nexport const ModalContext = createContext();\n","import { SHOW_MODAL, HIDE_MODAL } from './../types';\n\nexport const ModalReducer = (state, action) => {\n  switch (action.type) {\n    case SHOW_MODAL:\n      return { ...action.payload, visible: true };\n    case HIDE_MODAL:\n      return { ...state, visible: false };\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from 'react';\nimport { HIDE_MODAL, SHOW_MODAL } from '../types';\nimport { ModalContext } from './modalContext';\nimport { ModalReducer } from './modalReducer';\n\nconst ModalState = ({ children }) => {\n  const [state, dispatch] = useReducer(ModalReducer, { visible: false });\n\n  const showModal = (matchId) =>\n    dispatch({ type: SHOW_MODAL, payload: { matchId } });\n\n  const hideModal = () => dispatch({ type: HIDE_MODAL });\n\n  return (\n    <ModalContext.Provider value={{ showModal, hideModal, modal: state }}>\n      {children}\n    </ModalContext.Provider>\n  );\n};\n\nexport default ModalState;\n","import { createContext } from 'react';\n\nexport const SpinnerContext = createContext();\n","import { HIDE_SPINNER, SHOW_SPINNER } from '../types';\n\nexport const SpinnerReducer = (state, action) => {\n  const { spinnerKeys } = state;\n  const { payload } = action;\n\n  switch (action.type) {\n    case SHOW_SPINNER:\n      return { ...state, spinnerKeys: spinnerKeys.concat(payload) };\n    case HIDE_SPINNER:\n      return {\n        ...state,\n        spinnerKeys: spinnerKeys.filter((key) => key !== payload),\n      };\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from 'react';\nimport { HIDE_SPINNER, SHOW_SPINNER } from '../types';\nimport { SpinnerContext } from './spinnerContext';\nimport { SpinnerReducer } from './spinnerReducer';\n\nconst SpinnerState = ({ children }) => {\n  const [state, dispatch] = useReducer(SpinnerReducer, { spinnerKeys: [] });\n\n  const showSpinner = (key) => dispatch({ type: SHOW_SPINNER, payload: key });\n\n  const hideSpinner = (key) => dispatch({ type: HIDE_SPINNER, payload: key });\n\n  const isLoading = (key) => state.spinnerKeys.includes(key);\n\n  return (\n    <SpinnerContext.Provider value={{ showSpinner, hideSpinner, isLoading }}>\n      {children}\n    </SpinnerContext.Provider>\n  );\n};\n\nexport default SpinnerState;\n","export default __webpack_public_path__ + \"static/media/premier-league.699e0934.png\";","export default __webpack_public_path__ + \"static/media/primeira-league.313b5e85.png\";","export default __webpack_public_path__ + \"static/media/serie-a.5283c1a4.png\";","export default __webpack_public_path__ + \"static/media/serie-brasil.1e989df8.png\";","export default __webpack_public_path__ + \"static/media/league1.2ebfd688.png\";","export default __webpack_public_path__ + \"static/media/la-liga.96986d55.png\";","export default __webpack_public_path__ + \"static/media/eradivisie.7f6c05a2.png\";","export default __webpack_public_path__ + \"static/media/championship.c1eed5f5.png\";","export default __webpack_public_path__ + \"static/media/bundesliga.c8ffec72.png\";","import premier from '../assets/img/premier-league.png';\nimport primeira from '../assets/img/primeira-league.png';\nimport seriaA from '../assets/img/serie-a.png';\nimport serieBrasil from '../assets/img/serie-brasil.png';\nimport league1 from '../assets/img/league1.png';\nimport laLiga from '../assets/img/la-liga.png';\nimport eradivisie from '../assets/img/eradivisie.png';\nimport championship from '../assets/img/championship.png';\nimport bundesliga from '../assets/img/bundesliga.png';\n\nexport const BASE_URL = 'http://api.football-data.org/v2';\n\nexport const API_TOKEN = 'b656134547a54e3c9c475e3c26ed7f6d';\n\nexport const DAY_NAMES = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\nexport const competitionList = [\n  {\n    iconRoute: premier,\n    order: 1,\n    name: 'Premier League',\n    id: 2021,\n    route: 'premier-league',\n  },\n  {\n    iconRoute: championship,\n    order: 2,\n    name: 'Championship',\n    id: 2016,\n    route: 'championship',\n  },\n  {\n    iconRoute: bundesliga,\n    order: 3,\n    name: 'Bundesliga',\n    id: 2002,\n    route: 'bundesliga',\n  },\n  {\n    iconRoute: laLiga,\n    name: 'LaLiga',\n    order: 4,\n    id: 2014,\n    route: 'la-liga',\n  },\n  {\n    iconRoute: seriaA,\n    id: 2019,\n    name: 'Serie A',\n    order: 5,\n    route: 'serie-a',\n  },\n  {\n    iconRoute: league1,\n    order: 6,\n    name: 'League 1',\n    id: 2015,\n    route: 'league-1',\n  },\n  {\n    iconRoute: eradivisie,\n    order: 7,\n    name: 'Eradivisie',\n    id: 2003,\n    route: 'eradivisie',\n  },\n  {\n    iconRoute: primeira,\n    order: 8,\n    name: 'Primeira League',\n    id: 2017,\n    route: 'primeira-league',\n  },\n  {\n    iconRoute: serieBrasil,\n    order: 9,\n    name: 'Serie Brasil',\n    id: 2013,\n    route: 'serie-brasil',\n  },\n];\n\nexport const spinnerList = {\n  headerSpinner: { name: 'competition-header-spinner', styles: 'my-6' },\n  matchesSpinner: { name: 'competition-matches-spinner', styles: 'my-8' },\n  standingSpinner: { name: 'competition-standing-spinner', styles: 'my-8' },\n  scorersSpinner: { name: 'competition-scorers-spinner', styles: 'my-8' },\n  profileSpinner: { name: 'team-profile-spinner', styles: 'my-9' },\n  liveSpinner: { name: 'live-data-spinner', styles: 'my-9', variant: 'info' },\n  modalSpinner: { name: 'modal-spinner', styles: 'my-10' },\n  buttonSpinner: { name: 'load-button', styles: '' },\n};\n\nexport const standingSettings = {\n  0: {\n    value: '№',\n    tip: 'Team position',\n  },\n  1: {\n    value: 'Team',\n    tip: 'Team name',\n  },\n  2: {\n    value: 'G',\n    tip: 'Games',\n  },\n  3: {\n    value: 'W',\n    tip: 'Wins',\n  },\n  4: {\n    value: 'D',\n    tip: 'Total draws',\n  },\n  5: {\n    value: 'L',\n    tip: 'Total losses',\n  },\n  6: {\n    value: 'P',\n    tip: 'Total points',\n  },\n  7: {\n    value: 'Goals',\n    tip: 'Total goals',\n  },\n};\n\nexport const scorersSettings = {\n  0: {\n    value: '№',\n    tip: 'Position',\n  },\n  1: {\n    value: 'Player',\n    tip: 'Player',\n  },\n  2: {\n    value: 'Team',\n    tip: 'Player`s team',\n  },\n  3: {\n    value: 'G',\n    tip: 'Total goals',\n  },\n};\n\nexport const DEFAULT_NEG_RANGE = -10;\nexport const DEFAULT_POS_RANGE = 10;\nexport const DEFAULT_LIMIT = 10;\nexport const DEFAULT_SELECT_RANGE = 10;\n\nexport const DEFAULT_QUERY = {\n  limit: 10,\n  pos_range: 10,\n  neg_range: -10,\n};\n\nexport const iconStyles = {\n  size: '1.5rem',\n  // className: color,\n};\n","import { competitionList } from './config';\n\nexport const getDate = (string = formDate()) => {\n  const date = new Date(string);\n  const year = date.getFullYear();\n  const month =\n    date.getMonth() + 1 > 9 ? date.getMonth() + 1 : '0' + (date.getMonth() + 1);\n  const day = date.getDate() > 9 ? date.getDate() : '0' + date.getDate();\n\n  const numberDay = date.getDay();\n  const hours = date.getHours() > 9 ? date.getHours() : '0' + date.getHours();\n  const minutes = date.getMinutes() === 0 ? '00' : date.getMinutes();\n\n  return { year, month, day, hours, minutes, numberDay };\n};\n\nexport const formDate = (days = 0) => {\n  const date = new Date();\n  date.setDate(date.getDate() + +days);\n  const year = date.getFullYear();\n  const month =\n    date.getMonth() + 1 > 9 ? date.getMonth() + 1 : '0' + (date.getMonth() + 1);\n  const day = date.getDate() > 9 ? date.getDate() : '0' + date.getDate();\n\n  return `${year}-${month}-${day}`;\n};\n\nexport const getCompetitionId = (name) =>\n  competitionList.find(({ route }) => route === name).id || null;\n","import { BASE_URL, DEFAULT_LIMIT, API_TOKEN } from './config';\nimport { formDate, getCompetitionId } from './helper';\n\nexport const fetchData = async (path, query = '') => {\n  const response = await fetch(BASE_URL + path + query, {\n    method: 'GET',\n    headers: {\n      'X-Auth-Token': API_TOKEN,\n    },\n  });\n  const data = await response.json();\n  return data;\n};\n\nexport const fetchTeamData = async (teamId) => {\n  const pathname = `/teams/${teamId}`;\n  const data = await fetchData(pathname);\n\n  return data;\n};\n\nexport const fetchMatch = async (matchId) => {\n  const pathname = `/matches/${matchId}`;\n  const data = await fetchData(pathname);\n  const {\n    head2head,\n    match: {\n      id,\n      competition,\n      utcDate,\n      status,\n      venue,\n      matchday,\n      score,\n      homeTeam,\n      awayTeam,\n    },\n  } = data;\n  return {\n    head2head,\n    id,\n    utcDate,\n    status,\n    venue,\n    matchday,\n    score,\n    homeTeam: homeTeam.name,\n    awayTeam: awayTeam.name,\n    competition,\n  };\n};\n\nexport const fetchCompetitionInfo = async (compName) => {\n  const compId = getCompetitionId(compName);\n  const pathname = `/competitions/${compId}`;\n  const data = await fetchData(pathname);\n\n  const {\n    id,\n    area,\n    name,\n    currentSeason: { startDate, endDate, currentMatchday },\n  } = data;\n  const season = `${startDate.substr(2, 2)}/${endDate.substr(2, 2)}`;\n\n  return { id, area: area.name, name, season, currentMatchday };\n};\n\nexport const fetchCurrentMatches = async (date) => {\n  const param = date || formDate();\n  const query = `?dateFrom=${param}&dateTo=${param}&competitions=2002,2003,2013,2014,2015,2016,2017,2019,2021`;\n  const pathname = '/matches';\n  const data = await fetchData(pathname, query);\n\n  return data;\n};\n\nexport const fetchStanding = async (\n  compName,\n  query = `?standingType=TOTAL`,\n) => {\n  const compId = getCompetitionId(compName);\n  const pathname = `/competitions/${compId}/standings`;\n\n  const data = await fetchData(pathname, query);\n\n  return data;\n};\n\nexport const fetchScorers = async (compName, query = DEFAULT_LIMIT) => {\n  const compId = getCompetitionId(compName);\n  const pathname = `/competitions/${compId}/scorers?limit=`;\n  const data = await fetchData(pathname, query);\n  return data;\n};\n\nexport const fetchCompetitionMatches = async (compName, range = 0) => {\n  const compId = getCompetitionId(compName);\n  const pathname = `/competitions/${compId}/matches`;\n  let query;\n  if (range >= 0) {\n    query = `?dateFrom=${formDate()}&dateTo=${formDate(\n      range,\n    )}&status=SCHEDULED,LIVE,IN_PLAY,PAUSED`;\n  } else {\n    query = `?dateFrom=${formDate(\n      range,\n    )}&dateTo=${formDate()}&status=FINISHED,POSTPONED,SUSPENDED,CANCELED`;\n  }\n\n  const matches = await fetchData(pathname, query);\n\n  return matches;\n};\n","import {\n  useParams,\n  useLocation,\n  useHistory,\n  useRouteMatch,\n} from 'react-router-dom';\nimport { useMemo } from 'react';\nimport queryString from 'query-string';\n\nexport const useRouter = () => {\n  const params = useParams();\n  const location = useLocation();\n  const history = useHistory();\n  const match = useRouteMatch();\n\n  return useMemo(() => {\n    return {\n      push: history.push,\n      replace: history.replace,\n      pathname: location.pathname,\n      query: {\n        ...queryString.parse(location.search),\n      },\n      stringify: queryString.stringify,\n      params,\n      match,\n      location,\n      history,\n    };\n  }, [params, match, location, history]);\n};\n","import { useState, useCallback } from 'react';\n\nexport const useAsyncError = () => {\n  const [_, setError] = useState();\n\n  return useCallback(\n    (err) => {\n      setError(() => {\n        throw err;\n      });\n    },\n    [setError],\n  );\n};\n","import { useAsyncError } from './useAsyncError';\nimport { useEffect, useState, useContext } from 'react';\nimport { SpinnerContext } from './../context/spinner/spinnerContext';\n\nexport const useFetchData = (func, deps, spinnerName, ...rest) => {\n  const [data, setData] = useState({});\n  const { showSpinner, hideSpinner } = useContext(SpinnerContext);\n  const throwError = useAsyncError();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      showSpinner(spinnerName);\n      try {\n        const data = await func(...rest);\n\n        if (data.errorCode) {\n          throwError(new Error(data.message));\n        }\n\n        setData(data);\n        hideSpinner(spinnerName);\n      } catch (err) {\n        throwError(new Error(err));\n      }\n    };\n\n    fetchData();\n  }, [...deps, spinnerName, func, throwError]);\n\n  return data;\n};\n","import React, { useContext } from 'react';\nimport { Spinner as BootstrapSpinner } from 'react-bootstrap';\nimport { SpinnerContext } from '../../context/spinner/spinnerContext';\nimport PropTypes from 'prop-types';\n\nconst Spinner = ({ name, variant, styles, children }) => {\n  const { isLoading } = useContext(SpinnerContext);\n\n  return isLoading(name) ? (\n    <div className='d-flex justify-content-center aligh-items-center  w-100'>\n      <BootstrapSpinner\n        animation='border'\n        variant={variant}\n        className={styles}\n      />\n    </div>\n  ) : (\n    children\n  );\n};\n\nSpinner.propTypes = {\n  name: PropTypes.string.isRequired,\n  varian: PropTypes.string,\n  styles: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.arrayOf(PropTypes.element),\n  ]).isRequired,\n};\n\nSpinner.defaultProps = {\n  variant: 'primary',\n  styles: 'my-5',\n};\n\nexport default Spinner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Image } from 'react-bootstrap';\n\nconst CompetitionTitle = ({ name, img, country }) => (\n  <span className='d-flex align-items-center'>\n    <Image src={img} className='live-icon' alt=' ' />\n    <span className='text-uppercase mx-2'>{country}:</span>\n    <span>{name}</span>\n  </span>\n);\n\nCompetitionTitle.propTypes = {\n  name: PropTypes.string,\n  img: PropTypes.string,\n  country: PropTypes.string,\n};\n\nCompetitionTitle.defaultProps = {\n  img: null,\n  name: '',\n  country: '',\n};\n\nexport default CompetitionTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst MatchScore = ({ score, styles }) => (\n  <span className={styles}>\n    {score.homeTeam === null ? '-:-' : `${score.homeTeam} : ${score.awayTeam}`}\n  </span>\n);\n\nMatchScore.propTypes = {\n  score: PropTypes.object.isRequired,\n  styles: PropTypes.string,\n};\n\nMatchScore.defaultProps = {\n  styles: '',\n};\n\nexport default MatchScore;\n","import React from 'react';\nimport { OverlayTrigger, Tooltip as BootstrapTooltip } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nconst Tooltip = ({ children, tip }) => (\n  <OverlayTrigger\n    placemant='auto'\n    overlay={<BootstrapTooltip>{tip}</BootstrapTooltip>}\n  >\n    {children}\n  </OverlayTrigger>\n);\n\nTooltip.propTypes = {\n  tip: PropTypes.string.isRequired,\n  children: PropTypes.object.isRequired,\n};\n\nexport default Tooltip;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FaInfoCircle } from 'react-icons/fa';\nimport { IconContext } from 'react-icons';\nimport { ModalContext } from '../../context/modal/modalContext';\nimport { getDate } from '../../helper/helper';\n\nimport MatchScore from '../Competition/MatchScore.js';\nimport Tooltip from './Tooltip';\n\nconst Match = ({ match, styles }) => {\n  const { utcDate, score, homeTeam, awayTeam, id } = match;\n  const { month, day, hours, minutes } = getDate(utcDate);\n  const { showModal } = useContext(ModalContext);\n\n  const iconStyles = {\n    size: '1.5rem',\n    className: styles,\n  };\n\n  return (\n    <tr>\n      <td style={{ maxWidth: '7%' }}>{`${day}.${month}`}</td>\n      <td style={{ maxWidth: '7%' }}>{`${hours}:${minutes}`}</td>\n      <td style={{ width: '30%' }} className='right'>\n        <Link\n          to={`/team-profile/${homeTeam.id}`}\n          className={styles || 'text-primary'}\n        >\n          {homeTeam.name}\n        </Link>\n      </td>\n      <td style={{ minWidth: '55px' }}>\n        <MatchScore score={score.fullTime} />\n      </td>\n      <td style={{ width: '30%' }} className='left'>\n        <Link\n          to={`/team-profile/${awayTeam.id}`}\n          className={styles || 'text-primary'}\n        >\n          {awayTeam.name}\n        </Link>\n      </td>\n      <td style={{ width: '50px' }}>\n        <IconContext.Provider value={iconStyles}>\n          <Tooltip tip='Match profile' className={styles}>\n            <FaInfoCircle onClick={() => showModal(id)} role='button' />\n          </Tooltip>\n        </IconContext.Provider>\n      </td>\n    </tr>\n  );\n};\n\nMatch.propTypes = {\n  match: PropTypes.object.isRequired,\n  styles: PropTypes.string,\n};\n\nMatch.defaultProps = {\n  styles: 'match-primary',\n};\n\nexport default Match;\n","import React from 'react';\nimport { Table } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { competitionList } from './../../helper/config.js';\n\nimport CompetitionTitle from '../General/CompetitionTitle';\nimport Match from './../General/Match';\nimport Tooltip from '../General/Tooltip.js';\n\nimport PropTypes from 'prop-types';\n\nconst GroupMatches = ({ name, matches }) => {\n  const icon = matches[0].competition.area.ensignUrl;\n  const country = matches[0].competition.area.name;\n  const compId = matches[0].competition.id;\n  const { route } = competitionList.find(({ id }) => id === compId);\n\n  return (\n    <Table responsive hover size=''>\n      <thead className='alert-info border'>\n        <tr>\n          <th colSpan='5'>\n            <CompetitionTitle name={name} img={icon} country={country} />\n          </th>\n          <th className='right'>\n            <Tooltip tip='Competition standing'>\n              <Link to={`/competition/${route}`} className='custom-link'>\n                Standing\n              </Link>\n            </Tooltip>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {matches.map((match) => (\n          <Match match={match} styles='custom-link' key={match.id} />\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nGroupMatches.propTypes = {\n  name: PropTypes.string.isRequired,\n  matches: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default GroupMatches;\n","import React, { useState, useEffect } from 'react';\nimport { Row } from 'react-bootstrap';\nimport { fetchCurrentMatches } from '../../helper/fetchData';\nimport { spinnerList } from '../../helper/config';\nimport { useRouter } from '../../hooks/useRouter';\nimport { useFetchData } from './../../hooks/useFetchData';\n\nimport Spinner from '../General/Spinner';\nimport GroupMatches from './GroupMatches';\n\nconst { liveSpinner } = spinnerList;\n\nconst LiveMatches = () => {\n  const [matches, setMatches] = useState([]);\n\n  const {\n    query: { date, status },\n  } = useRouter();\n\n  const spinnerName = liveSpinner.name;\n\n  const data = useFetchData(fetchCurrentMatches, [date], spinnerName, date);\n\n  useEffect(() => {\n    if (!data.matches) return;\n\n    const sortedMatches = sortByCompetition(data.matches);\n    const filteredMatches = filterByStatus(sortedMatches, status);\n    setMatches(filteredMatches);\n  }, [data, status]);\n\n  const sortByCompetition = (data) => {\n    const sortedMatches = {};\n\n    data.forEach((match) => {\n      const { name } = match.competition;\n      if (sortedMatches.hasOwnProperty(name)) {\n        sortedMatches[name].push(match);\n      } else {\n        sortedMatches[name] = [];\n        sortedMatches[name].push(match);\n      }\n    });\n\n    return Object.entries(sortedMatches);\n  };\n\n  const filterByStatus = (matches, status) => {\n    switch (status) {\n      case 'scheduled':\n      case 'finished':\n        return matches\n          .map(([name, arr]) => {\n            const filteredArr = arr.filter(\n              (item) => item.status === status.toUpperCase(),\n            );\n\n            return [name, filteredArr];\n          })\n          .filter(([_, matches]) => matches.length);\n\n      default:\n        return matches;\n    }\n  };\n\n  return (\n    <Row className='pt-2 px-2'>\n      <Spinner {...liveSpinner}>\n        {matches.map(([compName, compMatches], id) => (\n          <GroupMatches name={compName} matches={compMatches} key={id} />\n        ))}\n      </Spinner>\n    </Row>\n  );\n};\n\nexport default LiveMatches;\n","import React from 'react';\nimport { useRouter } from './../../hooks/useRouter';\nimport { Nav, ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\n\nconst MatchFilter = () => {\n  const { query, pathname, push, stringify } = useRouter();\n\n  const handleFilterChange = (value) => {\n    push({\n      pathname,\n      search: stringify({ ...query, status: value }),\n    });\n  };\n\n  return (\n    <ToggleButtonGroup\n      type='radio'\n      name='options'\n      value={query.status || 'all'}\n      onChange={(val) => handleFilterChange(val)}\n    >\n      <ToggleButton value='all' as={Nav.Item} variant='info'>\n        All\n      </ToggleButton>\n      <ToggleButton value='finished' variant='info'>\n        Results\n      </ToggleButton>\n      <ToggleButton value='scheduled' variant='info'>\n        Schedule\n      </ToggleButton>\n    </ToggleButtonGroup>\n  );\n};\n\nexport default MatchFilter;\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { IconContext } from 'react-icons';\nimport { FcCalendar } from 'react-icons/fc';\nimport { DAY_NAMES, DEFAULT_SELECT_RANGE } from './../../helper/config';\nimport { getDate, formDate } from './../../helper/helper';\nimport { useRouter } from './../../hooks/useRouter';\n\nconst DatePicker = () => {\n  const { query, push, pathname, stringify } = useRouter();\n\n  const handleSelectChange = (event) => {\n    push({\n      pathname,\n      search: stringify({ ...query, date: event.target.value, status: 'all' }),\n    });\n  };\n  return (\n    <Form className='d-flex mb-2 mb-sm-0 align-items-center '>\n      <Form.Label className='m-0 mr-2'>\n        <IconContext.Provider value={{ size: '2rem' }}>\n          <FcCalendar />\n        </IconContext.Provider>\n      </Form.Label>\n      <Form.Control\n        as='select'\n        value={query.date || formDate()}\n        onChange={(val) => handleSelectChange(val)}\n        custom\n      >\n        {new Array(10).fill(null).map((_, index) => {\n          const date = formDate(index - DEFAULT_SELECT_RANGE / 2);\n          const { numberDay, day, month } = getDate(date);\n\n          return (\n            <option value={date} key={index}>\n              {`${DAY_NAMES[numberDay]}, ${day}/${month}`}\n            </option>\n          );\n        })}\n      </Form.Control>\n    </Form>\n  );\n};\n\nexport default DatePicker;\n","import React from 'react';\nimport { Col, Row } from 'react-bootstrap';\n\nimport LiveMatches from './LiveMatches';\nimport MatchFilter from './MatchFilter';\nimport DatePicker from './DatePicker';\n\nconst Home = () => (\n  <Col lg={8} className='border rounded mx-auto mb-2'>\n    <Row className=' d-flex flex-column-reverse flex-sm-row justify-content-between p-2'>\n      <MatchFilter />\n      <DatePicker />\n    </Row>\n    <LiveMatches />\n  </Col>\n);\n\nexport default Home;\n","import React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { DEFAULT_NEG_RANGE, DEFAULT_POS_RANGE } from '../../helper/config';\nimport { useRouter } from '../../hooks/useRouter';\n\nconst CompetitionNav = () => {\n  const {\n    match: { url },\n  } = useRouter();\n\n  return (\n    <Nav variant='pills' className='mt-4 mb-2'>\n      <LinkContainer exact to={url}>\n        <Nav.Link className='mr-1 p-1'>Standing</Nav.Link>\n      </LinkContainer>\n      <LinkContainer\n        to={{\n          pathname: `${url}/results`,\n          search: `?range=${DEFAULT_NEG_RANGE}`,\n        }}\n      >\n        <Nav.Link className='mx-1 p-1'>Results</Nav.Link>\n      </LinkContainer>\n      <LinkContainer\n        to={{\n          pathname: `${url}/schedule`,\n          search: `?range=${DEFAULT_POS_RANGE}`,\n        }}\n      >\n        <Nav.Link className='mx-1 p-1'>Schedule</Nav.Link>\n      </LinkContainer>\n      <LinkContainer to={`${url}/scorers`}>\n        <Nav.Link className='ml-1 p-1'>Scorers</Nav.Link>\n      </LinkContainer>\n    </Nav>\n  );\n};\n\nexport default CompetitionNav;\n","import React from 'react';\nimport { Col, Image, ListGroup, Row } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport { competitionList, spinnerList } from '../../helper/config';\nimport { fetchCompetitionInfo } from '../../helper/fetchData';\nimport { useFetchData } from '../../hooks/useFetchData';\n\nimport Spinner from '../General/Spinner';\n\nconst { headerSpinner } = spinnerList;\n\nconst CompetitionHeader = () => {\n  const { name } = useParams();\n\n  const competition = competitionList.find(({ route }) => route === name);\n  const spinnerName = headerSpinner.name;\n\n  const data = useFetchData(fetchCompetitionInfo, [name], spinnerName, name);\n\n  const { name: competitionName, area, season, currentMatchday } = data;\n\n  return (\n    <Col className='p-2 d-flex align-items-center competition-header '>\n      <Spinner {...headerSpinner}>\n        <Row>\n          <Image\n            src={competition.iconRoute || ''}\n            className='competition-logo'\n            rounded\n            thumbnail\n          />\n        </Row>\n        <Row>\n          <ListGroup className='mx-5 ' variant='flush'>\n            <ListGroup.Item className='bg-light'>\n              <span className='h1 text-primary'>{competitionName}</span>\n            </ListGroup.Item>\n            <ListGroup.Item className='bg-light'>\n              <strong>Area:</strong> {area}\n            </ListGroup.Item>\n            <ListGroup.Item className='bg-light'>\n              <strong>Current season:</strong> {season}\n            </ListGroup.Item>\n            <ListGroup.Item className='bg-light'>\n              <strong>Curent matchday:</strong> {currentMatchday}\n            </ListGroup.Item>\n          </ListGroup>\n        </Row>\n      </Spinner>\n    </Col>\n  );\n};\n\nexport default CompetitionHeader;\n","import React, { useContext } from 'react';\nimport { Button, Spinner } from 'react-bootstrap';\nimport { SpinnerContext } from '../../context/spinner/spinnerContext';\nimport { useRouter } from './../../hooks/useRouter';\n\nimport { spinnerList, DEFAULT_QUERY } from './../../helper/config';\nimport PropTypes from 'prop-types';\n\nconst spinnerName = spinnerList.buttonSpinner.name;\n\nconst LoadBtn = ({ query: queryName }) => {\n  const { isLoading } = useContext(SpinnerContext);\n  const { query, push, pathname, stringify } = useRouter();\n\n  const changeQuery = (name) => {\n    const queryParam = +query[name] || DEFAULT_QUERY[name];\n    query[name] = queryParam + queryParam;\n\n    push({\n      pathname,\n      search: stringify(query),\n    });\n  };\n\n  return (\n    <Button\n      variant='outline-primary'\n      className='m-3 loading-btn d-block m-auto'\n      onClick={() => changeQuery(queryName)}\n    >\n      {isLoading(spinnerName) ? (\n        <>\n          <Spinner\n            size='sm'\n            as='span'\n            animation='border'\n            role='status'\n            aria-hidden='true'\n            className='align-middle'\n          />\n          <span className='align-middle ml-2'>Loading...</span>\n        </>\n      ) : (\n        <span className='align-middle'>Load more!</span>\n      )}\n    </Button>\n  );\n};\n\nLoadBtn.propTypes = {\n  queryName: PropTypes.string.isRequired,\n};\n\nexport default LoadBtn;\n","import React from 'react';\nimport { Table } from 'react-bootstrap';\nimport Match from './../General/Match';\nimport PropTypes from 'prop-types';\n\nconst Matchday = ({ matchday, matches }) => (\n  <Table size='sm' className='mb-3' hover>\n    <thead className=' border alert-warning'>\n      <tr>\n        <th colSpan='6' className='left'>\n          Matchday: {matchday}\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      {matches.map((match) => (\n        <Match match={match} key={match.id} />\n      ))}\n    </tbody>\n  </Table>\n);\n\nMatchday.propTypes = {\n  matchday: PropTypes.string,\n  matches: PropTypes.array.isRequired,\n};\n\nexport default Matchday;\n","import React, { useEffect, useState } from 'react';\nimport { useRouter } from '../../hooks/useRouter';\nimport { usePrevious } from '../../hooks/usePrevious';\nimport { useFetchData } from '../../hooks/useFetchData';\nimport { fetchCompetitionMatches } from '../../helper/fetchData';\nimport { spinnerList } from '../../helper/config';\n\nimport Spinner from '../General/Spinner';\nimport LoadBtn from '../General/LoadBtn';\nimport Matchday from './Matchday';\n\nconst { matchesSpinner, buttonSpinner } = spinnerList;\n\nconst CompetitionMatches = () => {\n  const [matches, setMatches] = useState([]);\n\n  const {\n    params: { name },\n    query: { range },\n    match: { url },\n  } = useRouter();\n\n  const prevUrl = usePrevious(url);\n\n  const spinnerName =\n    !prevUrl && prevUrl !== url ? matchesSpinner.name : buttonSpinner.name;\n\n  const data = useFetchData(\n    fetchCompetitionMatches,\n    [range],\n    spinnerName,\n    name,\n    range,\n  );\n\n  useEffect(() => {\n    if (!data.matches) return;\n\n    const orderingMatches = (matches) => {\n      let orderedMatches = matches;\n\n      if (range < 0) {\n        orderedMatches.sort(([key1], [key2]) => +key2 - +key1);\n      }\n\n      return orderedMatches;\n    };\n\n    const sortedMatches = sortByMatchday(data.matches);\n    const orderedMatches = orderingMatches(sortedMatches);\n\n    setMatches(orderedMatches);\n  }, [data.matches, range]);\n\n  const sortByMatchday = (matches) => {\n    const filteredMatches = {};\n\n    matches.forEach((match) => {\n      if (filteredMatches[match.matchday]) {\n        filteredMatches[match.matchday].push(match);\n      } else {\n        filteredMatches[match.matchday] = [];\n        filteredMatches[match.matchday].push(match);\n      }\n    });\n\n    return Object.entries(filteredMatches);\n  };\n\n  return (\n    <Spinner {...matchesSpinner}>\n      {matches.map(([matchday, data]) => (\n        <Matchday matchday={matchday} matches={data} key={matchday} />\n      ))}\n      <LoadBtn query='range' />\n    </Spinner>\n  );\n};\n\nexport default CompetitionMatches;\n","import { useRef, useEffect } from 'react';\n\nexport const usePrevious = (value) => {\n  const prevRef = useRef();\n\n  useEffect(() => {\n    prevRef.current = value;\n  });\n\n  return prevRef.current;\n};\n","import React, { useEffect, useState } from 'react';\nimport { useRouter } from '../../hooks/useRouter';\nimport { fetchScorers } from '../../helper/fetchData';\nimport { scorersSettings, spinnerList } from '../../helper/config';\nimport { Table } from 'react-bootstrap';\n\nimport Spinner from '../General/Spinner';\nimport Tooltip from '../General/Tooltip';\nimport LoadBtn from '../General/LoadBtn';\nimport { useFetchData } from '../../hooks/useFetchData';\n\nconst { scorersSpinner, buttonSpinner } = spinnerList;\n\nconst CompetitionScorers = () => {\n  const [scorers, setScorers] = useState([]);\n\n  const {\n    params: { name },\n    query: { limit },\n  } = useRouter();\n  const spinnerName = limit ? buttonSpinner.name : scorersSpinner.name;\n\n  const data = useFetchData(fetchScorers, [limit], spinnerName, name, limit);\n\n  useEffect(() => {\n    if (!data.scorers) return;\n\n    setScorers(data.scorers);\n  }, [data.scorers]);\n\n  return (\n    <Spinner {...scorersSpinner}>\n      <Table>\n        <thead>\n          <tr>\n            {Object.entries(scorersSettings).map(([id, { value, tip }]) => (\n              <th key={id}>\n                <Tooltip tip={tip}>\n                  <span style={{ cursor: 'default' }}>{value}</span>\n                </Tooltip>\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {scorers.map(\n            ({ player: { name, id }, team, numberOfGoals }, position) => (\n              <tr key={id}>\n                <td>{position + 1}</td>\n                <td>{name}</td>\n                <td>{team.name}</td>\n                <td>{numberOfGoals}</td>\n              </tr>\n            ),\n          )}\n        </tbody>\n      </Table>\n      <LoadBtn query='limit' />\n    </Spinner>\n  );\n};\n\nexport default CompetitionScorers;\n","import React, { useEffect, useState } from 'react';\nimport { useRouter } from '../../hooks/useRouter';\nimport { Table } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { fetchStanding } from '../../helper/fetchData';\nimport { spinnerList, standingSettings } from '../../helper/config';\nimport { useFetchData } from '../../hooks/useFetchData';\nimport Spinner from '../General/Spinner';\nimport Tooltip from '../General/Tooltip';\n\nconst { standingSpinner } = spinnerList;\n\nconst CompetitionStanding = () => {\n  const [standing, setStanding] = useState([]);\n\n  const {\n    params: { name },\n  } = useRouter();\n\n  const data = useFetchData(fetchStanding, [name], standingSpinner.name, name);\n\n  useEffect(() => {\n    if (!data.standings) return;\n\n    setStanding(data.standings[0].table);\n  }, [data.standings]);\n\n  return (\n    <Spinner {...standingSpinner}>\n      <Table className='mb-1' size='sm' responsive>\n        <thead className='border bg-primary'>\n          <tr>\n            {Object.entries(standingSettings).map(([id, { value, tip }]) => (\n              <th key={id}>\n                <Tooltip tip={tip}>\n                  <span style={{ cursor: 'default' }}>{value}</span>\n                </Tooltip>\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {standing.map((item) => {\n            const {\n              position,\n              team: { id, name, crestUrl },\n              playedGames,\n              won,\n              draw,\n              lost,\n              points,\n              goalsFor,\n              goalsAgainst,\n            } = item;\n            return (\n              <tr className='border-tr' key={id}>\n                <td>{position}.</td>\n                <td className='left'>\n                  <img className='team-logo mr-2' src={crestUrl} alt=' ' />\n                  <Link to={`/team-profile/${id}`}>{name}</Link>\n                </td>\n                <td>{playedGames}</td>\n                <td>{won}</td>\n                <td>{draw}</td>\n                <td>{lost}</td>\n                <td>{points}</td>\n                <td>\n                  {goalsFor} : {goalsAgainst}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </Spinner>\n  );\n};\n\nexport default CompetitionStanding;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Col } from 'react-bootstrap';\n\nimport Navigation from './Navigation';\nimport Header from './Header';\nimport Matches from './Matches';\nimport Scorers from './Scorers';\nimport Standing from './Standing';\n\nconst Competition = () => (\n  <Col className='border rounded p-2 bg-light mx-auto mb-3' lg={8}>\n    <Header />\n    <Navigation />\n    <Route exact path='/competition/:name' component={Standing} />\n    <Route\n      path={['/competition/:name/results', '/competition/:name/schedule']}\n      component={Matches}\n    />\n    <Route path='/competition/:name/scorers' component={Scorers} />\n  </Col>\n);\n\nexport default Competition;\n","import React from 'react';\nimport { Row, Col, Image } from 'react-bootstrap';\nimport { PropTypes } from 'prop-types';\n\nconst ProfileHeader = ({ url, name }) => (\n  <Row className='d-flex align-items-center mb-3'>\n    <Col as={Image} src={url} className='w-100' sm={3}></Col>\n    <Col className='h1 ml-5'>{name}</Col>\n  </Row>\n);\n\nProfileHeader.propTypes = {\n  url: PropTypes.string,\n  name: PropTypes.string,\n};\n\nProfileHeader.defaultProps = {\n  url: '',\n  name: '',\n};\n\nexport default ProfileHeader;\n","import React from 'react';\nimport { useState } from 'react';\nimport { ListGroup, Tab, Tabs, Table } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nconst ProfileBody = ({ data }) => {\n  const [key, setKey] = useState('info');\n\n  const {\n    area,\n    address,\n    phone,\n    website,\n    email,\n    founded,\n    clubColors,\n    venue,\n    squad,\n  } = data;\n\n  return (\n    <>\n      <Tabs\n        id='controlled-tab-example'\n        activeKey={key}\n        onSelect={(k) => setKey(k)}\n        className='mb-2'\n      >\n        <Tab eventKey='info' title='Information' tabClassName='p-2'>\n          <ListGroup\n            className='px-4 py-2  font-weight-normal h5 mx-auto'\n            variant='flush'\n          >\n            <ListGroup.Item>\n              Country:\n              <span className='ml-2 font-weight-bold'>{area && area.name}</span>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              Founded: <span className='ml-2 font-weight-bold'>{founded}</span>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              Club colors:{' '}\n              <span className='ml-2 font-weight-bold'>{clubColors}</span>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              Coach:\n              <span className='ml-2 font-weight-bold'>\n                {squad && squad[squad.length - 1].name}\n              </span>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              Stadium: <span className='ml-2 font-weight-bold'>{venue}</span>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              Addres: <span className='ml-2 font-weight-bold'>{address}</span>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              Phone:<span className='ml-2 font-weight-bold'>{phone}</span>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              Email: <span className='ml-2 font-weight-bold'>{email}</span>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              Website: <span className='ml-2 font-weight-bold'>{website}</span>\n            </ListGroup.Item>\n          </ListGroup>\n        </Tab>\n        <Tab eventKey='squad' tabClassName='p-2' title='Squad'>\n          <Table>\n            <thead>\n              <tr>\n                <th>Player</th>\n                <th>Position</th>\n                <th>Nationality</th>\n                <th>Number</th>\n              </tr>\n            </thead>\n            <tbody>\n              {squad &&\n                squad.map((player) => {\n                  const {\n                    id,\n                    name,\n                    position,\n                    nationality,\n                    shirtNumber,\n                  } = player;\n                  return (\n                    <tr key={id}>\n                      <td>{name}</td>\n                      <td>{position || 'Coach'}</td>\n                      <td>{nationality}</td>\n                      <td>{shirtNumber || '-'}</td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </Table>\n        </Tab>\n      </Tabs>\n    </>\n  );\n};\n\nProfileBody.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default ProfileBody;\n","import React from 'react';\nimport { Col } from 'react-bootstrap';\nimport { fetchTeamData } from '../../helper/fetchData';\nimport { spinnerList } from '../../helper/config';\nimport { useFetchData } from '../../hooks/useFetchData';\nimport { useRouter } from '../../hooks/useRouter';\n\nimport Spinner from '../General/Spinner';\nimport ProfileHeader from './ProfileHeader';\nimport ProfileBody from './ProfileBody';\n\nconst { profileSpinner } = spinnerList;\n\nconst TeamProfile = () => {\n  const {\n    params: { teamId },\n  } = useRouter();\n\n  const spinnerName = profileSpinner.name;\n\n  const team = useFetchData(fetchTeamData, [], spinnerName, teamId);\n\n  return (\n    <Col lg={8} className='border rounded p-2 m-auto'>\n      <Spinner {...profileSpinner}>\n        <ProfileHeader name={team.shortName} url={team.crestUrl} />\n        <ProfileBody data={team} />\n      </Spinner>\n    </Col>\n  );\n};\n\nexport default TeamProfile;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { ModalContext } from '../../context/modal/modalContext';\nimport { SpinnerContext } from '../../context/spinner/spinnerContext';\nimport { Modal, Row, Col, ListGroup } from 'react-bootstrap';\nimport { fetchMatch } from '../../helper/fetchData';\nimport { getDate } from '../../helper/helper';\nimport { spinnerList } from '../../helper/config';\nimport Spinner from './Spinner';\nimport MatchScore from '../Competition/MatchScore';\nimport CompetitionTitle from './CompetitionTitle';\n\nconst initialMatch = {\n  competition: {\n    name: null,\n    area: {},\n  },\n  score: {\n    halfTime: {},\n    fullTime: {},\n  },\n};\n\nconst { modalSpinner } = spinnerList;\n\nconst MatchProfile = () => {\n  const [match, setMatch] = useState(initialMatch);\n\n  const {\n    hideModal,\n    modal: { matchId, visible },\n  } = useContext(ModalContext);\n\n  const { hideSpinner, showSpinner } = useContext(SpinnerContext);\n  const spinnerName = modalSpinner.name;\n\n  const fetchData = async () => {\n    if (!visible) return;\n\n    showSpinner(spinnerName);\n    const data = await fetchMatch(matchId);\n    setMatch(data);\n    hideSpinner(spinnerName);\n  };\n\n  useEffect(fetchData, [matchId]);\n  if (!visible) {\n    return null;\n  }\n  const {\n    competition,\n    homeTeam,\n    awayTeam,\n    matchday,\n    score,\n    venue,\n    head2head,\n    utcDate,\n  } = match;\n  const { year, day, month, hours, minutes } = getDate(utcDate);\n\n  return (\n    <Modal show={visible} onHide={hideModal} size='lg'>\n      <Spinner {...modalSpinner}>\n        <Modal.Header closeButton>\n          <CompetitionTitle\n            name={competition.name}\n            country={competition.area.name}\n            img={competition.area.ensignUrl}\n          />\n        </Modal.Header>\n        <Modal.Body>\n          <Row className='h3 mb-2 '>\n            <Col xs={5} className='text-right'>\n              {homeTeam}\n            </Col>\n            <Col xs={2} className='text-center'>\n              <MatchScore score={score.fullTime} styles='mx-auto' />\n            </Col>\n            <Col xs={5}>{awayTeam}</Col>\n          </Row>\n          <ListGroup\n            variant='flush'\n            className='text-center font-weight-normal h5 w-50 mx-auto my-4'\n          >\n            <ListGroup.Item>\n              Kick off:\n              <span className='font-weight-bold ml-2'>\n                {hours}:{minutes}\n              </span>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              Date:\n              <span className='font-weight-bold ml-2'>\n                {day}/{month}/{year}\n              </span>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              Matchday:\n              <span className='font-weight-bold ml-2'>{matchday}</span>\n            </ListGroup.Item>\n            {score.winner && (\n              <>\n                <ListGroup.Item>\n                  Half time:\n                  <MatchScore\n                    score={score.halfTime}\n                    styles='font-weight-bold ml-2'\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  Full time:\n                  <MatchScore\n                    score={score.fullTime}\n                    styles='font-weight-bold ml-2'\n                  />\n                </ListGroup.Item>\n              </>\n            )}\n            {venue && (\n              <ListGroup.Item>\n                Stadium:\n                <span className='font-weight-bold ml-2'> {venue}</span>\n              </ListGroup.Item>\n            )}\n            {head2head && (\n              <ListGroup.Item>\n                <p>Previous {head2head.numberOfMatches} meetings:</p>\n                <div className='d-inline-flex flex-column h6'>\n                  <div>HT Wins: {head2head.homeTeam.wins}</div>\n                  <div>Draws: {head2head.homeTeam.draws}</div>\n                  <div>AT Wins: {head2head.homeTeam.losses}</div>\n                </div>\n              </ListGroup.Item>\n            )}\n          </ListGroup>\n        </Modal.Body>\n      </Spinner>\n    </Modal>\n  );\n};\n\nexport default MatchProfile;\n","export default __webpack_public_path__ + \"static/media/brand-img.7279c9e8.png\";","import React from 'react';\nimport { Image } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst NavItem = ({ data }) => {\n  const { iconRoute, order, name, route } = data;\n\n  const itemClass = `nav-item mb-2 mb-xl-3 d-flex align-items-center  font-weight-bold nav-item-position order-${order}`;\n\n  return (\n    <div className={itemClass}>\n      <Image\n        src={iconRoute}\n        className='nav-icon mr-1 mr-xl-4  d-block'\n        alt='icon'\n      />\n      <NavLink\n        className='nav-link text-custom'\n        activeClassName='nav-link'\n        to={{\n          pathname: `/competition/${route}`,\n        }}\n      >\n        <span className='p-2'>{name}</span>\n      </NavLink>\n    </div>\n  );\n};\n\nNavItem.propTypes = {\n  data: PropTypes.objectOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  ),\n};\n\nexport default NavItem;\n","import React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport NavItem from './NavItem.js';\nimport PropTypes from 'prop-types';\n\nconst NavList = ({ competitions }) => (\n  <Nav className='w-100 flex-column '>\n    {competitions.map((item) => (\n      <NavItem data={item} key={item.id} />\n    ))}\n  </Nav>\n);\n\nNavList.propTypes = {\n  competitions: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default NavList;\n","import React from 'react';\nimport { Col, Image, Navbar } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nimport logo from '../../assets/img/brand-img.png';\nimport { competitionList } from '../../helper/config.js';\n\nimport NavList from './NavList.js';\n\nconst Navigation = () => (\n  <Col lg={3} className='bg-light border rounded vh-lg-100 mb-2 mb-lg-0 p-0'>\n    <Navbar\n      collapseOnSelect\n      expand='lg'\n      className='flex-lg-column justify-content-between justify-content-lg-start  align-items-center'\n    >\n      <Navbar.Brand as={NavLink} to='/' className=' my-lg-3 mb-lg-5'>\n        <Image alt='nav icon' src={logo} className='brand-img' />\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls='responsive-navbar-nav' />\n      <Navbar.Collapse id='responsive-navbar-nav' className='mt-3 w-100'>\n        <NavList competitions={competitionList} />\n      </Navbar.Collapse>\n    </Navbar>\n  </Col>\n);\n\nexport default Navigation;\n","import React, { Component } from 'react';\nimport { Col, Alert as BootstrapAlert, Button } from 'react-bootstrap';\n\nclass ErrorBoundary extends Component {\n  state = {\n    error: null,\n  };\n\n  static getDerivedStateFromError(error) {\n    return { error: error.message };\n  }\n\n  reload() {\n    window.location.reload();\n  }\n\n  render() {\n    const { error } = this.state;\n\n    if (error) {\n      return (\n        <Col lg={8} className='bordered p-2  mx-auto'>\n          <BootstrapAlert variant={'danger'} className='text-center p-5 my-8'>\n            <BootstrapAlert.Heading>\n              Oops! Something went wrong!\n            </BootstrapAlert.Heading>\n            <p>{error}</p>\n            <hr />\n            <p>\n              This may be due to restrictions on server requests per minute.\n              Wait a bit and try to reload.\n            </p>\n            <Button\n              onClick={this.reload}\n              variant='outline-danger'\n              className='px-5'\n            >\n              Reload\n            </Button>\n          </BootstrapAlert>\n        </Col>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Container, Row } from 'react-bootstrap';\nimport './styles/styles.scss';\n\nimport ModalState from './context/modal/modalState';\nimport SpinnerState from './context/spinner/spinnerState';\n\nimport Home from './components/Home/Home';\nimport Competition from './components/Competition/Competition';\nimport TeamProfile from './components/TeamProfile/TeamProfile';\nimport MatchProfile from './components/General/MatchProfile';\nimport Navigation from './components/Navigation/Navigation';\nimport ErrorBoundary from './components/General/ErrorBoundary';\n\nexport default function App() {\n  return (\n    <ModalState>\n      <SpinnerState>\n        <Container fluid>\n          <Row className='align-items-start p-2 p-lg-0'>\n            <Navigation />\n            <ErrorBoundary>\n              <Switch>\n                <Route path='/competition/:name' component={Competition} />\n                <Route path='/team-profile/:teamId' component={TeamProfile} />\n                <Route path={['/', '/live-data']} component={Home} />\n              </Switch>\n            </ErrorBoundary>\n          </Row>\n        </Container>\n        <MatchProfile />\n      </SpinnerState>\n    </ModalState>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter as Router } from 'react-router-dom';\n\nconst app = (\n  <Router>\n    <App />\n  </Router>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n"],"sourceRoot":""}